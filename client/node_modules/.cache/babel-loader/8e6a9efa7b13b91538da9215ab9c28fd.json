{"ast":null,"code":"var _jsxFileName = \"/Users/Jwill/Desktop/Access-Pro/access-pro/client/src/pages/Active.js\";\nimport React, { useState, Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { SearchBar, VideoList, VideoDetail } from \"../components/YoutubeSearch\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport youtube from \"../utils/api/youtube\";\nexport default (() => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      justifyContent: \"center\"\n    },\n    container: true,\n    spacing: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(VideoDetail, {\n    video: selectedVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(VideoList, {\n    videos: videos,\n    onVideoSelect: setSelectedVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))))));\n\n  async function handleSubmit(searchTerm) {\n    const {\n      data: {\n        items: videos\n      }\n    } = await youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: \"AIzaSyARSPCn98qSB-fAzAdkuOLZUPM3jy7PcDo\",\n        q: searchTerm\n      }\n    });\n    setVideos(videos);\n    setSelectedVideo(videos[0]);\n  }\n});","map":{"version":3,"sources":["/Users/Jwill/Desktop/Access-Pro/access-pro/client/src/pages/Active.js"],"names":["React","useState","Component","Grid","SearchBar","VideoList","VideoDetail","Col","Row","Container","youtube","videos","setVideos","selectedVideo","setSelectedVideo","justifyContent","handleSubmit","searchTerm","data","items","get","params","part","maxResults","key","q"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,WAA/B,QAAkD,6BAAlD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AAGA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,gBAAe,MAAM;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;AAEA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEc,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAA2C,IAAA,SAAS,MAApD;AAAqD,IAAA,OAAO,EAAE,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEH,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF,MAAnB;AAA2B,IAAA,aAAa,EAAEG,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF,CADF,CADF;;AAoBA,iBAAeE,YAAf,CAA4BC,UAA5B,EAAwC;AACtC,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAER;AAAT;AAAR,QAA8B,MAAMD,OAAO,CAACU,GAAR,CAAY,QAAZ,EAAsB;AAC9DC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,UAAU,EAAE,CAFN;AAGNC,QAAAA,GAAG,EAAE,yCAHC;AAINC,QAAAA,CAAC,EAAER;AAJG;AADsD,KAAtB,CAA1C;AASAL,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,gBAAgB,CAACH,MAAM,CAAC,CAAD,CAAP,CAAhB;AACD;AACF,CArCD","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { SearchBar, VideoList, VideoDetail } from \"../components/YoutubeSearch\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\n\nimport youtube from \"../utils/api/youtube\";\n\nexport default () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  return (\n    <Container>\n      <Grid style={{ justifyContent: \"center\" }} container spacing={10}>\n        <Grid item xs={11}>\n          <Grid container spacing={10}>\n            <Grid item xs={12}>\n              <SearchBar onSubmit={handleSubmit} />\n            </Grid>\n            <Grid item xs={8}>\n              <VideoDetail video={selectedVideo} />\n            </Grid>\n            <Grid item xs={4}>\n              <VideoList videos={videos} onVideoSelect={setSelectedVideo} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n\n  async function handleSubmit(searchTerm) {\n    const { data: { items: videos } } = await youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        key: \"AIzaSyARSPCn98qSB-fAzAdkuOLZUPM3jy7PcDo\",\n        q: searchTerm,\n      }\n    });\n\n    setVideos(videos);\n    setSelectedVideo(videos[0]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}