{"ast":null,"code":"var _jsxFileName = \"/Users/Jwill/Desktop/Access-Pro/access-pro/client/src/pages/Huddle.js\";\nimport React, { Component } from 'react';\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Huddle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  } //incorporating local storage \n\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage\n    // when user leaves/refreshes the page\n\n    window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key); // parse the localStorage string and setState\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          // handle empty string\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy current list of items\n\n    const list = [...this.state.list]; // add the new item to the list\n\n    list.push(newItem); // update state with new list, reset the new item input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list]; // filter out the item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Trending Post\")), React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Explore.Engage.Empower.\"))), React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Post Search\",\n      icon: \"far fa-Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Card, {\n      title: \"Live Feed\",\n      icon: \"far fa-Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(List, {\n      type: \"text\",\n      placeholder: \"Type item here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Username:   Jwill: I just had a great arm workout!! #striveforgreatness \"), React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Username:   MGordon: Just declared to Kentuck, dreams come true! \"), React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Username:   King James: Rise and Shine! Lets start this lovely day on a highnote. \"), React.createElement(\"button\", {\n      className: \"add-btn btn-floating\",\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Username:   MBagley: Responding to King James: Preach  big fella!. \")))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Huddle;","map":{"version":3,"sources":["/Users/Jwill/Desktop/Access-Pro/access-pro/client/src/pages/Huddle.js"],"names":["React","Component","Jumbotron","Card","Form","Book","Footer","Col","Row","Container","List","Huddle","constructor","props","state","newItem","list","componentDidMount","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","componentWillUnmount","removeEventListener","key","localStorage","hasOwnProperty","value","getItem","JSON","parse","setState","e","setItem","stringify","updateInput","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","target","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Huddle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          newItem: \"\",\n          list: []\n        };\n\n    }\n\n    //incorporating local storage \n    componentDidMount() {\n        this.hydrateStateWithLocalStorage();\n\n        // add event listener to save state to localStorage\n        // when user leaves/refreshes the page\n        window.addEventListener(\n        \"beforeunload\",\n        this.saveStateToLocalStorage.bind(this)\n        );\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\n        \"beforeunload\",\n        this.saveStateToLocalStorage.bind(this)\n        );\n\n        // saves if component has a chance to unmount\n        this.saveStateToLocalStorage();\n    }\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n        // if the key exists in localStorage\n        if (localStorage.hasOwnProperty(key)) {\n            // get the key's value from localStorage\n            let value = localStorage.getItem(key);\n\n            // parse the localStorage string and setState\n            try {\n            value = JSON.parse(value);\n            this.setState({ [key]: value });\n            } catch (e) {\n            // handle empty string\n            this.setState({ [key]: value });\n            }\n        }\n        }\n    }\n\n    saveStateToLocalStorage() {\n        // for every item in React state\n        for (let key in this.state) {\n        // save to localStorage\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    }\n\n    updateInput(key, value) {\n        // update react state\n        this.setState({ [key]: value });\n    }\n\n    addItem() {\n        // create a new item with unique id\n        const newItem = {\n        id: 1 + Math.random(),\n        value: this.state.newItem.slice()\n    \n        };\n\n        // copy current list of items\n        const list = [...this.state.list];\n\n        // add the new item to the list\n        list.push(newItem);\n\n        // update state with new list, reset the new item input\n        this.setState({\n        list,\n        newItem: \"\"\n        });\n    }\n\n    deleteItem(id) {\n        // copy current list of items\n        const list = [...this.state.list];\n        // filter out the item being deleted\n        const updatedList = list.filter(item => item.id !== id);\n\n        this.setState({ list: updatedList });\n    }\n\n    render() {\n        return (\n          <Container>\n            <Row>\n              <Col size=\"md-12\">\n                <Jumbotron>\n                  <h1 className=\"text-center\">\n                    <strong>Trending Post</strong>\n                  </h1>\n                  <h2 className=\"text-center\">Explore.Engage.Empower.</h2>\n                </Jumbotron>\n              </Col>\n              <Col size=\"md-12\">\n                <Card title=\"Post Search\" icon=\"far fa-Search\">\n                  <Form/>\n                </Card>\n                <Card title=\"Live Feed\" icon=\"far fa-Search\">\n                  <List\n                  \n                    type=\"text\"\n                    placeholder=\"Type item here\"\n                    value={this.state.newItem}\n                    onChange={e => this.updateInput(\"newItem\", e.target.value)}\n                  />\n                  <button className=\"add-btn btn-floating\" onClick={() => this.addItem()} disabled={!this.state.newItem.length}>Username:   Jwill: I just had a great arm workout!! #striveforgreatness </button>\n                  <button className=\"add-btn btn-floating\" onClick={() => this.addItem()} disabled={!this.state.newItem.length}>Username:   MGordon: Just declared to Kentuck, dreams come true! </button>\n                  <button className=\"add-btn btn-floating\" onClick={() => this.addItem()} disabled={!this.state.newItem.length}>Username:   King James: Rise and Shine! Lets start this lovely day on a highnote. </button>\n                  <button className=\"add-btn btn-floating\" onClick={() => this.addItem()} disabled={!this.state.newItem.length}>Username:   MBagley: Responding to King James: Preach  big fella!. </button>\n\n\n                    \n                </Card>\n              </Col>\n            </Row>\n            <Footer />\n          </Container>\n        );\n      \n    }\n}\n\nexport default Huddle;"]},"metadata":{},"sourceType":"module"}